trigger: none

variables:
  terraformVersion: 1.2.9
  myDirectory: '$(System.DefaultWorkingDirectory)/basic'
  environmentServiceNameAzureRM: 'azure-portal-connection'

stages:
- stage: TerraformPipeline
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    pool:
      name: RohtasPool
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: $(terraformVersion)

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(myDirectory)
        backendServiceArm: $(environmentServiceNameAzureRM)
        backendAzureRmStorageAccountName: 'robinb17storage'
        backendAzureRmContainerName: 'mycontainer'
        backendAzureRmKey: 'myterraform.tfstate'

    - task: TerraformTask@5
      name: planStep
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: $(myDirectory)
        environmentServiceNameAzureRM: $(environmentServiceNameAzureRM)

  # ðŸ”’ Manual Approval Job (Agentless)
  - job: ManualApproval
    displayName: 'Manual Approval Before Apply'
    dependsOn: TerraformPlan
    condition: succeeded()  # âœ… only if plan succeeds
    pool: server
    steps:
    - task: ManualValidation@1
      inputs:
        instructions: 'Review Terraform plan output and approve to apply.'
        notifyUsers: 'robinson15kumar@gmail.com'
        approvers: 'gupta15robinson@gmail.com'
        timeout: '1d'
        onTimeout: 'reject'

  - job: TerraformApply
    displayName: 'Terraform Apply'
    dependsOn: ManualApproval
    condition: succeeded()  # âœ… only if approval is given
    pool:
      name: RohtasPool
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: $(terraformVersion)

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: $(myDirectory)
        backendServiceArm: $(environmentServiceNameAzureRM)
        backendAzureRmStorageAccountName: 'robinb17storage'
        backendAzureRmContainerName: 'mycontainer'
        backendAzureRmKey: 'myterraform.tfstate'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: $(myDirectory)
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: $(environmentServiceNameAzureRM)